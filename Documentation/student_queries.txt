/* SQL QUERIES FOR STUDENT */
/* =====================================================================*/
/*
CREATE NEW STUDENT:
UX will present option to create a new student and ask for student parameter values.
 We will add the new student with the data into the database with this query:

Parameter 1: student_id: INT
Parameter 2: student_name: VARCHAR(250)
Parameter 3: dob: DATE
Parameter 4: address: VARCHAR(250)
Parameter 5: phone: VARCHAR(15)

Example with hardcoded values: 
INSERT INTO student VALUES (83738938, 'Gio', '1995-01-01', '555 Street State ZIP', '5555555555');

*/

INSERT INTO student VALUES (?, ?, ?, ?, ?);

/* =====================================================================*/
/*
VIEW ALL STUDENTS:
UX will present option to view students.
We will display all students with the data with this query:

*/

SELECT *
FROM student;

/* =====================================================================*/
/*
VIEW STUDENT REPORT:
UX will present option to view a specific student's report and ask for the id of the desired student.
 We will display all of the student's data for the report with this query:

Parameter 1: student_id: INT

Example with hardcoded values:
SELECT *
FROM enrolled_in 
WHERE student_id = 7
ORDER BY course_id;
*/

SELECT *
FROM enrolled_in 
WHERE student_id = ?
ORDER BY course_id;

/* =====================================================================*/

/*
EDIT STUDENT NAME:
UX will present option to edit a student's data and ask for student id and new value.
We will update the desired field of the desired student with this query so 
it contains the new value:

Parameter 1: student_id: INT
Parameter 2: student_name: VARCHAR(250)

harded example:
UPDATE student
SET student_name = 'Sam Taco'
WHERE student_id = 7;

*/

UPDATE student
SET student_name = ?
WHERE student_id = ?;

/* =====================================================================*/

/*
EDIT STUDENT ADDRESS:
UX will present option to edit a student's data and ask for student id and new value.
We will update the desired field of the desired student with this query so 
it contains the new value:

Parameter 1: student_id: INT
Parameter 2: address: VARCHAR(250)

Hardcoded exmaple:
UPDATE student
SET address = '444 Pizza Drive State Zip'
WHERE student_id = 7;

*/

UPDATE student
SET address = ?
WHERE student_id = student_id;

/* =====================================================================*/

/*
EDIT STUDENT phone:
UX will present option to edit a student's data and ask for student id and new value.
We will update the desired field of the desired student with this query so 
it contains the new value:

Parameter 1: student_id: INT
Parameter 2: phone: VARCHAR(15)

Hardcoded example:
UPDATE student
SET phone = 5555555566
WHERE student_id = 7;

*/

UPDATE student
SET phone = ?
WHERE student_id = student_id;

/* =====================================================================*/

/*
REMOVE STUDENT:
UX will present option to delete a new student and ask for student id of the student the user wishes to delete from the system.
 We will delete the desired student and all of their associated data with this query:


Parameter 1: student_id: INT

Example with hardcoded values: 
DELETE FROM student
WHERE student_id =  1;

*/

DELETE FROM student
WHERE student_id = ?;